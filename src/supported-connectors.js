var supportedConnectorsTemplates = [
 {
  name: "MySql (Debezium)",
  icon: 'mysql.png',
  description: 'MySql CDC: capture data changes on MySql source',
  type: "Source",
  uiEnabled: true,
  color: "#1da1f3",
  class: "io.debezium.connector.mysql.MySqlConnector",
  docs: "io.debezium.connector.mysql.MySqlConnector.html"
 },
 {
  name: "MongoDB (Debezium)",
  icon: 'mongodb.png',
  description: 'MongoDB CDC: capture data changes on MongoDB source',
  type: "Source",
  uiEnabled: true,
  color: "#1da1f3",
  class: "io.debezium.connector.mongodb.MongoDbConnector",
  docs: "io.debezium.connector.mongodb.MongoDbConnector.html"
 },
 {
  name: "PostgreSql (Debezium)",
  icon: 'postgres.png',
  description: 'PostgreSql CDC: capture data changes on PostgreSql source',
  type: "Source",
  uiEnabled: true,
  color: "#1da1f3",
  class: "io.debezium.connector.postgresql.PostgresConnector",
  docs: "io.debezium.connector.postgresql.PostgresConnector.html"
 },
 {
  name: "Amazon Kinesis (Confluent - jcustenborder)",
  icon: 'kinesis.png',
  description: 'Kafka Connect connector for Amazon Kinesis',
  type: "Source",
  uiEnabled: true,
  color: "#1da1f3",
  class: "com.github.jcustenborder.kafka.connect.kinesis.KinesisSourceConnector",
  docs: "com.github.jcustenborder.kafka.connect.kinesis.KinesisSourceConnector.html"
 },
 {
  name: "Salesforce (Confluent - jcustenborder)",
  icon: 'salesforce.png',
  description: 'Kafka Connect connector for reading data in real time from salesforce.com',
  type: "Source",
  uiEnabled: true,
  color: "#1da1f3",
  class: "com.github.jcustenborder.kafka.connect.salesforce.SalesforceSourceConnector",
  docs: "com.github.jcustenborder.kafka.connect.salesforce.SalesforceSourceConnector.html"
 },
 {
  name: "RabbitMQ (Confluent - jcustenborder)",
  icon: 'rabbitmq.svg',
  description: 'Kafka Connect connector for RabbitMQ',
  type: "Source",
  uiEnabled: true,
  color: "#1da1f3",
  class: "com.github.jcustenborder.kafka.connect.rabbitmq.RabbitMQSourceConnector",
  docs: "com.github.jcustenborder.kafka.connect.rabbitmq.RabbitMQSourceConnector.html"
 },
 {
  name: "Splunk (Confluent - jcustenborder)",
  icon: 'splunk.png',
  description: 'Kafka Connect connector for receiving data from Splunk',
  type: "Source",
  uiEnabled: true,
  color: "#1da1f3",
  class: "com.github.jcustenborder.kafka.connect.splunk.SplunkHttpSourceConnector",
  docs: "com.github.jcustenborder.kafka.connect.splunk.SplunkHttpSourceConnector.html"
 },
 {
  name: "Syslog SSLTCP (Confluent - jcustenborder)",
  icon: 'connector.jpg',
  description: 'Kafka Connect connector for receiving syslog data',
  type: "Source",
  uiEnabled: true,
  color: "#1da1f3",
  class: "com.github.jcustenborder.kafka.connect.syslog.SSLTCPSyslogSourceConnector",
  docs: "com.github.jcustenborder.kafka.connect.syslog.SSLTCPSyslogSourceConnector.html"
 },
 {
  name: "Syslog TCP (Confluent - jcustenborder)",
  icon: 'connector.jpg',
  description: 'Kafka Connect connector for receiving syslog data',
  type: "Source",
  uiEnabled: true,
  color: "#1da1f3",
  class: "com.github.jcustenborder.kafka.connect.syslog.TCPSyslogSourceConnector",
  docs: "com.github.jcustenborder.kafka.connect.syslog.TCPSyslogSourceConnector.html"
 },
 {
  name: "Syslog UDP (Confluent - jcustenborder)",
  icon: 'connector.jpg',
  description: 'Kafka Connect connector for receiving syslog data',
  type: "Source",
  uiEnabled: true,
  color: "#1da1f3",
  class: "com.github.jcustenborder.kafka.connect.syslog.UDPSyslogSourceConnector",
  docs: "com.github.jcustenborder.kafka.connect.syslog.UDPSyslogSourceConnector.html"
 },
 {
  name: "Spool Dir - CSV (Confluent - jcustenborder)",
  icon: 'csv.png',
  description: 'Kafka Connect connector for reading CSV files into Kafka',
  type: "Source",
  uiEnabled: true,
  color: "#1da1f3",
  class: "com.github.jcustenborder.kafka.connect.spooldir.SpoolDirCsvSourceConnector",
  docs: "com.github.jcustenborder.kafka.connect.spooldir.SpoolDirCsvSourceConnector.html"
 },
 {
  name: "Spool Dir - JSON (Confluent - jcustenborder)",
  icon: 'json.png',
  description: 'Kafka Connect connector for reading JSON files into Kafka',
  type: "Source",
  uiEnabled: true,
  color: "#1da1f3",
  class: "com.github.jcustenborder.kafka.connect.spooldir.SpoolDirJsonSourceConnector",
  docs: "com.github.jcustenborder.kafka.connect.spooldir.SpoolDirJsonSourceConnector.html"
 },
 {
  name: "Twitter (Confluent - jcustenborder)",
  icon: 'twitter.png',
  description: 'Kafka Connect connector to stream data in real time from Twitter',
  type: "Source",
  uiEnabled: true,
  color: "#1da1f3",
  class: "com.github.jcustenborder.kafka.connect.twitter.TwitterSourceConnector",
  docs: "com.github.jcustenborder.kafka.connect.twitter.TwitterSourceConnector.html"
 },
 {
  name: "Yahoo Finance (DataMountaineer)",
  type: "Source",
  icon: "yahoofinance.png",
  description: "Stream stock and currency exchange rates into Kafka",
  uiEnabled: true,
  color: "#30007b",
  class: "com.datamountaineer.streamreactor.connect.yahoo.source.YahooSourceConnector",
  docs: "com.datamountaineer.streamreactor.connect.yahoo.source.YahooSourceConnector.html"
 },
 {
  name: "File (Apache Kafka)",
  icon: "file.png",
  description: "Tail files or folders and stream data into Kafka",
  type: "Source",
  uiEnabled: true,
  color: "#bbb2b2",
  class: "org.apache.kafka.connect.file.FileStreamSourceConnector",
  docs: "org.apache.kafka.connect.file.FileStreamSourceConnector.html"
 },
 {
  name: "File System",
  icon: "fs.png",
  description: "Tail files or folders and stream data into Kafka",
  type: "Source",
  uiEnabled: true,
  color: "#bbb2b2",
  class: "com.github.mmolimar.kafka.connect.fs.FsSourceConnector",
  docs: "com.github.mmolimar.kafka.connect.fs.FsSourceConnector.html"
 },
 {
   name: "Ftp (DataMountaineer)",
   icon: "ftp.png",
   description: "Tail remote FTP folders and bring messages in Kafka",
   type: "Source",
   uiEnabled: true,
   color: "#b1b1b1",
   class: "com.datamountaineer.streamreactor.connect.ftp.FtpSourceConnector",
   docs: "com.datamountaineer.streamreactor.connect.ftp.FtpSourceConnector.html"
 },
 {
  name: "Blockchain (DataMountaineer)",
  icon: "blockchain-logo.jpg",
  description: "Get blockchain.info data into Kafka",
  type: "Source",
  uiEnabled: true,
  color: "#b1b1b1",
  class: "com.datamountaineer.streamreactor.connect.blockchain.source.BlockchainSourceConnector",
  docs: "com.datamountaineer.streamreactor.connect.blockchain.source.BlockchainSourceConnector.html"
 },
 {
  name: "Jdbc (Confluent)",
  icon: "database.png",
  description: "Stream data from SQL server into Kafka",
  type: "Source",
  uiEnabled: true,
  color: "#b1b1b1",
  class: "io.confluent.connect.jdbc.JdbcSourceConnector",
  docs: "io.confluent.connect.jdbc.JdbcSourceConnector.html",
 },
 {
  name: "Cassandra (DataMountaineer)",
  icon: "cassandra.jpg",
  description: "Extract Cassandra data using the CQL driver into Kafka",
  uiEnabled: true,
  type: "Source",
  color: "",
  class: "com.datamountaineer.streamreactor.connect.cassandra.source.CassandraSourceConnector",
  docs: "com.datamountaineer.streamreactor.connect.cassandra.source.CassandraSourceConnector.html",
 },
 {
  name: "Bloomberg (DataMountaineer)",
  icon: "bloomberg.png",
  description: "Use the Bloomberg API to stream data into Kafka",
  type: "Source",
  uiEnabled: true,
  color: "#a65674",
  class: "com.datamountaineer.streamreactor.connect.bloomberg.BloombergSourceConnector",
  docs: "com.datamountaineer.streamreactor.connect.bloomberg.BloombergSourceConnector.html"
 },
 {
  name: "JMS (DataMountaineer)",
  icon: "jms.png",
  description: "Get data from JMS into Kafka",
  type: "Source",
  uiEnabled: true,
  color: "pink",
  class: "com.datamountaineer.streamreactor.connect.jms.source.JMSSourceConnector",
  docs: "com.datamountaineer.streamreactor.connect.jms.source.JMSSourceConnector.html"
 },
 {
  name: "MQTT (DataMountaineer)",
  icon: "mqtt.png",
  description: "Read data from MQTT and write them into Kafka",
  type: "Source",
  uiEnabled: true,
  color: "#5B346C",
  class: "com.datamountaineer.streamreactor.connect.mqtt.source.MqttSourceConnector",
  docs: "com.datamountaineer.streamreactor.connect.mqtt.source.MqttSourceConnector.html",
 },
 {
  name: "RethinkDB (DataMountaineer)",
  type: "Source",
  icon: "rethink.png",
  description: "Source records from RethinkDB into Kafka",
  color: "#4A3A41",
  uiEnabled: true,
  class: "com.datamountaineer.streamreactor.connect.rethink.source.ReThinkSourceConnector",
  docs: "com.datamountaineer.streamreactor.connect.rethink.source.ReThinkSourceConnector.html",
 },
 {
  name: "CoAP (DataMountaineer)",
  type: "Source",
  icon: "coap.png",
  description: "Get Constrained Application Protocol data into Kafka",
  color: "#3A3A3A",
  uiEnabled: true,
  class: "com.datamountaineer.streamreactor.connect.coap.source.CoapSourceConnector",
  docs: "com.datamountaineer.streamreactor.connect.coap.source.CoapSourceConnector.html",
 },
 {
  name: "Schemas (Confluent)",
  type: "Source",
  icon: "avro.svg",
  description: "Store Avro schemas in HDFS",
  color: "#3A3A3A",
  uiEnabled: true,
  class: "io.confluent.connect.hdfs.tools.SchemaSourceConnector",
  docs: "io.confluent.connect.hdfs.tools.SchemaSourceConnector.html",
 },
 {
  name: "Schemas (Confluent)",
  type: "Source",
  icon: "avro.svg",
  description: "Get Avro schemas into Kafka",
  color: "#3A3A3A",
  uiEnabled: true,
  class: "io.confluent.connect.storage.tools.SchemaSourceConnector",
  docs: "io.confluent.connect.storage.tools.SchemaSourceConnector.html",
 },
 {
  name: "Kafka Replicator (Confluent)",
  type: "Source",
  icon: "replicate.png",
  description: "Replicate data to another Kafka cluster",
  color: "#3A3A3A",
  uiEnabled: true,
  class: "io.confluent.connect.replicator.ReplicatorSourceConnector",
  docs: "io.confluent.connect.replicator.ReplicatorSourceConnector.html",
 },
 {
  name: "HANA",
  icon: 'sap.png',
  description: 'Kafka Connect connector for SAP HANA',
  type: "Source",
  uiEnabled: true,
  color: "#1da1f3",
  class: "com.sap.kafka.connect.source.hana.HANASourceConnector",
  docs: "com.sap.kafka.connect.source.hana.HANASourceConnector.html"
 },
 {
  name: "DynamoDB",
  icon: 'dynamodb.svg',
  description: 'Kafka Connect connector for DynamoDB',
  type: "Source",
  uiEnabled: true,
  color: "#1da1f3",
  class: "dynamok.source.DynamoDbSourceConnector",
  docs: "dynamok.source.DynamoDbSourceConnector.html"
 },
 {
  name: "Ignite (Apache Ignite)",
  icon: 'ignite.png',
  description: 'Kafka Connect connector for Apache Ignite',
  type: "Source",
  uiEnabled: true,
  color: "#1da1f3",
  class: "org.apache.ignite.stream.kafka.connect.IgniteSourceConnector",
  docs: "org.apache.ignite.stream.kafka.connect.IgniteSourceConnector.html"
 },
 {
  name: "Couchbase",
  icon: 'couchbase.svg',
  description: 'Kafka Connect connector for Couchbase',
  type: "Source",
  uiEnabled: true,
  color: "#1da1f3",
  class: "com.couchbase.connect.kafka.CouchbaseSourceConnector",
  docs: "com.couchbase.connect.kafka.CouchbaseSourceConnector.html"
 },
 {
  name: "Oracle (DbVisit)",
  icon: 'oracle.png',
  description: 'Kafka Connect connector for Oracle',
  type: "Source",
  uiEnabled: true,
  color: "#1da1f3",
  class: "com.dbvisit.replicate.kafkaconnect.ReplicateSourceConnector",
  docs: "com.dbvisit.replicate.kafkaconnect.ReplicateSourceConnector.html"
 },
 {
  name: "NATS",
  icon: 'nats.png',
  description: 'Kafka Connect connector for NATS',
  type: "Source",
  uiEnabled: true,
  color: "#1da1f3",
  class: "com.oyst.kafka.connect.nats.NatsSourceConnector",
  docs: "com.oyst.kafka.connect.nats.NatsSourceConnector.html"
 },
 {
  name: "Google Pub/Sub (Google)",
  icon: 'pubsub.png',
  description: 'Kafka Connect connector for Google Pub/Sub',
  type: "Source",
  uiEnabled: true,
  color: "#1da1f3",
  class: "com.google.pubsub.kafka.source.CloudPubSubSourceConnector",
  docs: "com.google.pubsub.kafka.source.CloudPubSubSourceConnector.html"
 },
 {
  name: "Elastic Search (DataMountaineer)",
  color: "#5CB85C",
  icon: "elastic.png",
  description: "Write data from Kafka to Elastic Search",
  type: "Sink",
  uiEnabled: true,
  class: "com.datamountaineer.streamreactor.connect.elastic.ElasticSinkConnector",
  docs: "com.datamountaineer.streamreactor.connect.elastic.ElasticSinkConnector.html",
 },
 {
  name: "Cassandra (DataMountaineer)",
  icon: "cassandra.jpg",
  description: "Store Kafka data into Cassandra",
  uiEnabled: true,
  type: "Sink",
  color: "#1a9f85",
  class: "com.datamountaineer.streamreactor.connect.cassandra.sink.CassandraSinkConnector",
  docs: "com.datamountaineer.streamreactor.connect.cassandra.sink.CassandraSinkConnector.html",
 },
 {
  name: "InfluxDB (DataMountaineer)",
  icon: "influxdb.jpg",
  description: "Store Kafka data into InfluxDB",
  uiEnabled: true,
  type: "Sink",
  color: "#0090BA",
  class: "com.datamountaineer.streamreactor.connect.influx.InfluxSinkConnector",
  docs: "com.datamountaineer.streamreactor.connect.influx.InfluxSinkConnector.html",
 },
 {
  name: "MongoDB (DataMountaineer)",
  type: "Sink",
  icon: "mongodb.png",
  description: "Write Kafka data into MongoDB",
  color: "#609959",
  uiEnabled: true,
  class: "com.datamountaineer.streamreactor.connect.mongodb.sink.MongoSinkConnector",
  docs: "com.datamountaineer.streamreactor.connect.mongodb.sink.MongoSinkConnector.html",
 },
 {
  name: "HazelCast (DataMountaineer)",
  type: "Sink",
  description: "Store Kafka data into HazelCast (RingBuffer)",
  icon: "hazelcast.png",
  uiEnabled: true,
  color: "#002A36",
  class: "com.datamountaineer.streamreactor.connect.hazelcast.sink.HazelCastSinkConnector",
  docs: "com.datamountaineer.streamreactor.connect.hazelcast.sink.HazelCastSinkConnector.html",
 },
 {
  name: "Jdbc (Confluent)",
  icon: 'database.png',
  description: 'Store Kafka data into SQL',
  type: "Sink",
  uiEnabled: true,
  color: "#D8291F",
  class: "io.confluent.connect.jdbc.JdbcSinkConnector",
  docs: "io.confluent.connect.jdbc.JdbcSinkConnector.html",
 },
 {
  name: "Amazon S3 (Confluent)",
  type: "Sink",
  icon: "s3.png",
  description: "Store Kafka data into Amazon S3",
  color: "#3A3A3A",
  uiEnabled: true,
  class: "io.confluent.connect.s3.S3SinkConnector",
  docs: "io.confluent.connect.s3.S3SinkConnector.html",
 },
 {
  name: "DocumentDB (DataMountaineer)",
  type: "Sink",
  icon: "documentdb.png",
  description: "Write Kafka data into Azure Document DB",
  color: "#3A3A3A",
  uiEnabled: true,
  class: "com.datamountaineer.streamreactor.connect.azure.documentdb.sink.DocumentDbSinkConnector",
  docs: "com.datamountaineer.streamreactor.connect.azure.documentdb.sink.DocumentDbSinkConnector.html",
 },
 {
  name: "Redis (DataMountaineer)",
  icon: 'redis.png',
  description: 'Store Kafka data into Redis Sorted Sets/Key-Value',
  type: "Sink",
  uiEnabled: true,
  color: "#D8291F",
  class: "com.datamountaineer.streamreactor.connect.redis.sink.RedisSinkConnector",
  docs: "com.datamountaineer.streamreactor.connect.redis.sink.RedisSinkConnector.html",
 },
 {
  name: "Kudu (DataMountaineer)",
  icon: 'kudu.png',
  type: "Sink",
  description: "Write Kafka data into Kudu",
  uiEnabled: true,
  color: "#549998",
  class: "com.datamountaineer.streamreactor.connect.kudu.sink.KuduSinkConnector",
  docs: "com.datamountaineer.streamreactor.connect.kudu.sink.KuduSinkConnector.html",
 },
 {
  name: "JMS (DataMountaineer)",
  type: "Sink",
  icon: "jms.png",
  description: "Store Kafka data into a JMS topic/queue",
  uiEnabled: true,
  color: "#879171",
  class: "com.datamountaineer.streamreactor.connect.jms.sink.JMSSinkConnector",
  docs: "com.datamountaineer.streamreactor.connect.jms.sink.JMSSinkConnector.html",
 },
 {
  name: "HDFS (Confluent)",
  type: "Sink",
  description: "Write Kafka data into HDFS",
  icon: "hdfs.png",
  uiEnabled: true,
  color: "#ffcccc",
  class: "io.confluent.connect.hdfs.HdfsSinkConnector",
  docs: "io.confluent.connect.hdfs.HdfsSinkConnector.html",
 }, {
  name: "VoltDB (DataMountaineer)",
  type: "Sink",
  icon: "voltdb.png",
  uiEnabled: true,
  description: 'A sink connector to write Kafka data into VoltDB',
  color: "#e8371b",
  class: "com.datamountaineer.streamreactor.connect.voltdb.VoltSinkConnector",
  docs: "com.datamountaineer.streamreactor.connect.voltdb.VoltSinkConnector.html",
 },
 {
  name: "File (Apache Kafka)",
  icon: "file.png",
  description: "Store Kafka data into files",
  type: "Sink",
  uiEnabled: true,
  color: "#b1b1b1",
  class: "org.apache.kafka.connect.file.FileStreamSinkConnector",
  docs: "org.apache.kafka.connect.file.FileStreamSinkConnector.html",
 },
 {
  name: "CoAP (DataMountaineer)",
  type: "Sink",
  icon: "coap.png",
  description: "Transfer Kafka data into Constrained Application Protocol service",
  color: "#3A3A3A",
  uiEnabled: true,
  class: "com.datamountaineer.streamreactor.connect.coap.sink.CoapSinkConnector",
  docs: "com.datamountaineer.streamreactor.connect.coap.sink.CoapSinkConnector.html",
 },
 {
  name: "HBase (DataMountaineer)",
  icon: "hbase.svg",
  type: "Sink",
  description: "Write Kafka data into HBase",
  uiEnabled: true,
  color: "#6d1c7c",
  class: "com.datamountaineer.streamreactor.connect.hbase.HbaseSinkConnector",
  docs: "com.datamountaineer.streamreactor.connect.hbase.HbaseSinkConnector.html",
 },
 {
  name: "RethinkDB (DataMountaineer)",
  type: "Sink",
  icon: "rethink.png",
  description: "Store Kafka data into RethinkDb",
  uiEnabled: true,
  color: "#4A3A41",
  class: "com.datamountaineer.streamreactor.connect.rethink.sink.ReThinkSinkConnector",
  docs: "com.datamountaineer.streamreactor.connect.rethink.sink.ReThinkSinkConnector.html",
 },
 {
  name: "ElasticSearch (Confluent)",
  type: "Sink",
  icon: "elastic.png",
  description: "Write Kafka data into Elastic Search",
  uiEnabled: true,
  color: "#4A3A41",
  class: "io.confluent.connect.elasticsearch.ElasticsearchSinkConnector",
  docs: "io.confluent.connect.elasticsearch.ElasticsearchSinkConnector.html",
 }, {
  name: "Druid (DataMountaineer)",
  type: "Sink",
  icon: "druid.png",
  description: "Write Kafka data into Apache Druid Search",
  uiEnabled: true,
  color: "#4A3A41",
  class: "com.datamountaineer.streamreactor.connect.druid.DruidSinkConnector",
  docs: "com.datamountaineer.streamreactor.connect.druid.DruidSinkConnector.html",
 },
 {
  name: "Http Solr (Confluent - jcustenborder)",
  icon: 'solr.png',
  description: 'Kafka Connect connector for Solr using direct HTTP access',
  type: "Sink",
  uiEnabled: true,
  color: "#1da1f3",
  class: "com.github.jcustenborder.kafka.connect.solr.HttpSolrSinkConnector",
  docs: "com.github.jcustenborder.kafka.connect.solr.HttpSolrSinkConnector.html"
 },
 {
  name: "Http Solr (Confluent - jcustenborder)",
  icon: 'solr.png',
  description: 'Kafka Connect connector for Solr using direct HTTP access',
  type: "Sink",
  uiEnabled: true,
  color: "#1da1f3",
  class: "com.github.jcustenborder.kafka.connect.solr.CloudSolrSinkConnector",
  docs: "com.github.jcustenborder.kafka.connect.solr.CloudSolrSinkConnector.html"
 },
 {
  name: "HANA",
  icon: 'sap.png',
  description: 'Kafka Connect connector for SAP HANA',
  type: "Sink",
  uiEnabled: true,
  color: "#1da1f3",
  class: "com.sap.kafka.connect.sink.hana.HANASinkConnector",
  docs: "com.sap.kafka.connect.sink.hana.HANASinkConnector.html"
 },
 {
  name: "DynamoDB",
  icon: 'dynamodb.svg',
  description: 'Kafka Connect connector for DynamoDB',
  type: "Sink",
  uiEnabled: true,
  color: "#1da1f3",
  class: "dynamok.sink.DynamoDbSinkConnector",
  docs: "dynamok.sink.DynamoDbSinkConnector.html"
 },
 {
  name: "Ignite (Apache Ignite)",
  icon: 'ignite.png',
  description: 'Kafka Connect connector for Apache Ignite',
  type: "Sink",
  uiEnabled: true,
  color: "#1da1f3",
  class: "org.apache.ignite.stream.kafka.connect.IgniteSinkConnector",
  docs: "org.apache.ignite.stream.kafka.connect.IgniteSinkConnector.html"
 },
 {
  name: "PubNub",
  icon: 'pubnub.png',
  description: 'Kafka Connect connector for PubNub',
  type: "Sink",
  uiEnabled: true,
  color: "#1da1f3",
  class: "com.segence.kafka.connect.pubnub.PubNubSinkConnector",
  docs: "com.segence.kafka.connect.pubnub.PubNubSinkConnector.html"
 },
 {
  name: "Splunk (Confluent - jcustenborder)",
  icon: 'splunk.png',
  description: 'Kafka Connect connector for sending data to Splunk',
  type: "Sink",
  uiEnabled: true,
  color: "#1da1f3",
  class: "com.github.jcustenborder.kafka.connect.splunk.SplunkHttpSinkConnector",
  docs: "com.github.jcustenborder.kafka.connect.splunk.SplunkHttpSinkConnector.html"
 },
 {
  name: "MongoDB",
  type: "Sink",
  icon: "mongodb.png",
  description: "Write Kafka data into MongoDB",
  color: "#609959",
  uiEnabled: true,
  class: "org.radarcns.mongodb.MongoDbSinkConnector",
  docs: "org.radarcns.mongodb.MongoDbSinkConnector.html",
 },
 {
  name: "NATS",
  icon: 'nats.png',
  description: 'Kafka Connect connector for NATS',
  type: "Sink",
  uiEnabled: true,
  color: "#1da1f3",
  class: "com.oyst.kafka.connect.nats.NatsSinkConnector",
  docs: "com.oyst.kafka.connect.nats.NatsSinkConnector.html"
 },
 {
  name: "Google Pub/Sub (Google)",
  icon: 'pubsub.png',
  description: 'Kafka Connect connector for Google Pub/Sub',
  type: "Sink",
  uiEnabled: true,
  color: "#1da1f3",
  class: "com.google.pubsub.kafka.sink.CloudPubSubSinkConnector",
  docs: "com.google.pubsub.kafka.sink.CloudPubSubSinkConnector.html"
 },
 {
  name: "Kudu (Parrot)",
  icon: 'kudu.png',
  description: 'Kafka Connect connector for Kudu',
  type: "Sink",
  uiEnabled: true,
  color: "#1da1f3",
  class: "io.parrot.kafka.connect.kudu.sink.KuduSinkConnector",
  docs: "io.parrot.kafka.connect.kudu.sink.KuduSinkConnector.html"
 }
];

var defaultConnectorInfo = {
 name: "unknown",
 type: "unknown",
 color: "",
 class: "",
 docs: "unknown.html"
};
